{"version":3,"sources":["./src/app/pages/register/register.page.html","./src/app/pages/register/register.module.ts","./src/app/pages/register/register.page.scss","./src/app/pages/register/register.page.ts","./src/app/services/custom-validators.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["module.exports = \"<ion-content light-gray-gradient>\\n    <div flex flex-columns style=\\\"height: 100%;\\\">\\n      <div flex flex-columns v-center style=\\\"height: 148px;\\\" h-center>\\n        <ion-img src=\\\"../../../assets/imgs/fb.png\\\" style=\\\"width:100px\\\"></ion-img>  \\n        <h3 text-navy no-margin>{{ api.admin ? 'Admin' : 'User' }}</h3>\\n      </div>\\n      <form [formGroup]='registerForm' flex v-center flex-columns>\\n          <mat-form-field size-md color=\\\"accent\\\" appearance=\\\"outline\\\">\\n            <mat-label>User Name</mat-label>\\n            <input matInput placeholder=\\\"display name\\\" formControlName=\\\"name\\\">\\n            \\n            <mat-error *ngIf=\\\"registerForm.controls.name.hasError('required')\\\">\\n            Name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field size-md color=\\\"accent\\\" appearance=\\\"outline\\\">\\n            <mat-label>Email</mat-label>\\n            <input matInput placeholder=\\\"unique id\\\" formControlName=\\\"email\\\">\\n            <mat-error *ngIf=\\\"registerForm.controls.email.hasError('email') && !registerForm.controls.email.hasError('required')\\\">\\n            Please enter a valid email address\\n            </mat-error>\\n            <mat-error *ngIf=\\\"registerForm.controls.email.hasError('required')\\\">\\n            Email is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        \\n          <mat-form-field size-md color=\\\"accent\\\" appearance=\\\"outline\\\">\\n              <mat-label>Password</mat-label>\\n              <input matInput placeholder=\\\"Your secret\\\" [type]=\\\"hide ? 'password' : 'text'\\\" formControlName=\\\"password\\\">\\n              <button type=\\\"button\\\" height-sm mat-icon-button matSuffix (click)=\\\"hide = !hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                  <mat-icon>{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              </button>\\n                <mat-error *ngIf=\\\"registerForm.controls.password.hasError('required')\\\">\\n                Please Enter <strong>Password</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"registerForm.controls.password.hasError('minlength')\\\">\\n                Minimum length should be <strong>6</strong>\\n                </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field size-md color=\\\"accent\\\" appearance=\\\"outline\\\">\\n              <mat-label>Confirm Password</mat-label>\\n              <input matInput placeholder=\\\"Your secret\\\" [type]=\\\"c_hide ? 'password' : 'text'\\\" formControlName=\\\"confirm_password\\\">\\n              <button type=\\\"button\\\" height-sm mat-icon-button matSuffix (click)=\\\"c_hide = !c_hide\\\" [attr.aria-label]=\\\"'Hide password'\\\" [attr.aria-pressed]=\\\"hide\\\">\\n                  <mat-icon>{{c_hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              </button>\\n              <mat-error *ngIf=\\\"registerForm.controls.confirm_password.hasError('required')\\\">\\n                    Please Confirm <strong>Password</strong>\\n                </mat-error>\\n                <mat-error *ngIf=\\\"registerForm.controls.confirm_password.hasError('mustMatch')\\\">\\n                    Both Passwords should be <strong>Match</strong>\\n                </mat-error>\\n          </mat-form-field>\\n          \\n          <mat-list>\\n            \\n              <mat-list-item>\\n                  <button (click)=\\\"register()\\\" mat-raised-button color=\\\"warn\\\" init-btn style=\\\"width: 200px\\\" [disabled]=\\\"!registerForm.valid\\\">\\n                        <span *ngIf=\\\"!api.loader\\\">SignUp</span> \\n                        <ion-spinner name=\\\"dots\\\" *ngIf=\\\"api.loader\\\"></ion-spinner>\\n                </button>\\n              </mat-list-item>\\n              <mat-list-item>\\n                  <p text-center size-sm m-auto>Already have an account?</p>\\n              </mat-list-item>\\n              \\n              <mat-list-item>\\n                  <a mat-raised-button init-btn style=\\\"width: 200px\\\" routerLink='/login'>LogIn</a>\\n                  <mat-divider></mat-divider>\\n              </mat-list-item>\\n          </mat-list>\\n      </form>\\n    </div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\nimport { AmdModule } from 'src/app/amd.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AmdModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"[height-sm] {\\n  height: 2rem !important;\\n}\\n\\n[size-sm] {\\n  font-size: 0.8rem;\\n}\\n\\n[size-md] {\\n  width: 80%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvZTpcXGlvbmljIDVcXG1lc3Nlbmdlci9zcmNcXGFwcFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKOztBREFBO0VBQ0ksVUFBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiW2hlaWdodC1zbV17XHJcbiAgICBoZWlnaHQ6IDJyZW0gIWltcG9ydGFudDtcclxufVxyXG5bc2l6ZS1zbV0ge1xyXG4gICAgZm9udC1zaXplOiAwLjhyZW07XHJcbn1cclxuW3NpemUtbWRdIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbn0iLCJbaGVpZ2h0LXNtXSB7XG4gIGhlaWdodDogMnJlbSAhaW1wb3J0YW50O1xufVxuXG5bc2l6ZS1zbV0ge1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cblxuW3NpemUtbWRdIHtcbiAgd2lkdGg6IDgwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MustMatch } from 'src/app/services/custom-validators';\nimport { ApiService } from 'src/app/api/api.service';\nimport { Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  hide: boolean = true;\n  c_hide: boolean = true;\n  registerForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private api: ApiService,\n    private plt: Platform) {\n    this.registerForm = this.formBuilder.group({\n      name: new FormControl('', Validators.compose([\n        Validators.required, \n      ])),\n      email: new FormControl('', Validators.compose([\n        Validators.required, \n        Validators.email\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(6) \n      ])),\n      confirm_password: new FormControl('', Validators.compose([\n        Validators.required, \n      ])),\n    },{\n      validators: MustMatch('password', 'confirm_password')\n    })\n   }\n\n  ngOnInit() {\n  }\n\n  register() {\n    this.api.loader = true;\n    this.api.signUp(this.registerForm.value['name'], this.registerForm.value['email'], this.registerForm.value['password']);\n  }\n\n}\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}"],"sourceRoot":""}